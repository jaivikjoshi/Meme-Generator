[{"/Users/jaivik/Meme-Generator/src/index.js":"1","/Users/jaivik/Meme-Generator/src/App.js":"2","/Users/jaivik/Meme-Generator/src/Pages/Memepage.js":"3","/Users/jaivik/Meme-Generator/src/Components/Meme.js":"4","/Users/jaivik/Meme-Generator/src/Components/Header.js":"5","/Users/jaivik/Meme-Generator/src/Components/Text.js":"6","/Users/jaivik/Meme-Generator/src/Pages/Login.js":"7","/Users/jaivik/Meme-Generator/src/Pages/Signup.js":"8","/Users/jaivik/Meme-Generator/src/Auth/Firebase.js":"9"},{"size":255,"mtime":1694976590440,"results":"10","hashOfConfig":"11"},{"size":489,"mtime":1694977112432,"results":"12","hashOfConfig":"11"},{"size":201,"mtime":1694268151797,"results":"13","hashOfConfig":"11"},{"size":1872,"mtime":1694177220146,"results":"14","hashOfConfig":"11"},{"size":487,"mtime":1694978854221,"results":"15","hashOfConfig":"11"},{"size":522,"mtime":1694176568314,"results":"16","hashOfConfig":"11"},{"size":2400,"mtime":1695124790312,"results":"17","hashOfConfig":"11"},{"size":2454,"mtime":1695124775927,"results":"18","hashOfConfig":"11"},{"size":727,"mtime":1695119695067,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h9johc",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaivik/Meme-Generator/src/index.js",[],[],"/Users/jaivik/Meme-Generator/src/App.js",[],[],"/Users/jaivik/Meme-Generator/src/Pages/Memepage.js",[],[],[],"/Users/jaivik/Meme-Generator/src/Components/Meme.js",["49","50","51"],[],"import React, {useState, useEffect, createRef} from \"react\";\nimport Text from \"./Text\";\nimport {exportComponentAsPNG} from 'react-component-export-image'\nconst Meme = () => {\n    const memeRef = createRef();\n    const [meme, setMeme] = useState({\n        randomImage: \"images/Empty.png\"\n    });\n    const [allMemes, setAllMemes] = useState([]);\n    \n    useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(res => res.json())\n        .then(data => setAllMemes(data.data.memes))\n    }, [])\n\n\n    const randomMemeHandler = () => {\n        const randomNumber = Math.floor(Math.random() * allMemes.length);              \n        const url = allMemes[randomNumber].url;\n        setMeme(prevMemeUrl => ({\n            ...prevMemeUrl,\n            randomImage: url\n        }))\n    }\n\n    const [countOfTextboxes, setCountOfTextboxes] = useState(0);\n\n    const addText = () => {\n        setCountOfTextboxes(countOfTextboxes + 1)\n    }\n    const removeText = () => {\n        setCountOfTextboxes(0)\n    }\n    return (\n        <main>\n            <div className = \"Meme\" ref={memeRef}>\n                <img src = {meme.randomImage} className=\"Random-img\"></img>\n                {\n                    Array(countOfTextboxes).fill(0).map(element => (<Text/>))\n                }\n            </div>\n            <div className=\"button-div\">\n                <button className=\"btn\"  onClick = {randomMemeHandler} >\n                    Get a New MEME IMAGE\n                </button>\n                <div className=\"d-btn\">\n                    <button className=\"btn-3\" role=\"button\" onClick={addText} onDoubleClick={removeText}>Add Text</button>\n                    <button className=\"btn-3\" role=\"button\" onClick={(element) => exportComponentAsPNG(memeRef)}>Download</button>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Meme","/Users/jaivik/Meme-Generator/src/Components/Header.js",[],[],"/Users/jaivik/Meme-Generator/src/Components/Text.js",[],[],"/Users/jaivik/Meme-Generator/src/Pages/Login.js",[],[],"/Users/jaivik/Meme-Generator/src/Pages/Signup.js",[],[],"/Users/jaivik/Meme-Generator/src/Auth/Firebase.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":38,"column":17,"nodeType":"54","endLine":38,"endColumn":70},{"ruleId":"55","severity":1,"message":"56","line":48,"column":21,"nodeType":"54","endLine":48,"endColumn":106},{"ruleId":"55","severity":1,"message":"56","line":49,"column":21,"nodeType":"54","endLine":49,"endColumn":114},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided."]