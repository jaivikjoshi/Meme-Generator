{"ast":null,"code":"import _objectSpread from\"/Users/jaivik/Meme-Generator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/jaivik/Meme-Generator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,createRef}from\"react\";import Text from\"./Text\";import{exportComponentAsPNG}from'react-component-export-image';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Meme=function Meme(){var memeRef=/*#__PURE__*/createRef();var _useState=useState({randomImage:\"images/Empty.png\"}),_useState2=_slicedToArray(_useState,2),meme=_useState2[0],setMeme=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allMemes=_useState4[0],setAllMemes=_useState4[1];useEffect(function(){fetch(\"https://api.imgflip.com/get_memes\").then(function(res){return res.json();}).then(function(data){return setAllMemes(data.data.memes);});},[]);var randomMemeHandler=function randomMemeHandler(){var randomNumber=Math.floor(Math.random()*allMemes.length);var url=allMemes[randomNumber].url;setMeme(function(prevMemeUrl){return _objectSpread(_objectSpread({},prevMemeUrl),{},{randomImage:url});});};var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),countOfTextboxes=_useState6[0],setCountOfTextboxes=_useState6[1];var addText=function addText(){setCountOfTextboxes(countOfTextboxes+1);};var removeText=function removeText(){setCountOfTextboxes(0);};return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Meme\",ref:memeRef,children:[/*#__PURE__*/_jsx(\"img\",{src:meme.randomImage,className:\"Random-img\"}),Array(countOfTextboxes).fill(0).map(function(element){return/*#__PURE__*/_jsx(Text,{});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-div\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:randomMemeHandler,children:\"Get a New MEME IMAGE\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-btn\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-3\",role:\"button\",onClick:addText,onDoubleClick:removeText,children:\"Add Text\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-3\",role:\"button\",onClick:function onClick(element){return exportComponentAsPNG(memeRef);},children:\"Download\"})]})]})]});};export default Meme;","map":{"version":3,"names":["React","useState","useEffect","createRef","Text","exportComponentAsPNG","jsx","_jsx","jsxs","_jsxs","Meme","memeRef","_useState","randomImage","_useState2","_slicedToArray","meme","setMeme","_useState3","_useState4","allMemes","setAllMemes","fetch","then","res","json","data","memes","randomMemeHandler","randomNumber","Math","floor","random","length","url","prevMemeUrl","_objectSpread","_useState5","_useState6","countOfTextboxes","setCountOfTextboxes","addText","removeText","children","className","ref","src","Array","fill","map","element","onClick","role","onDoubleClick"],"sources":["/Users/jaivik/Meme-Generator/src/Components/Meme.js"],"sourcesContent":["import React, {useState, useEffect, createRef} from \"react\";\nimport Text from \"./Text\";\nimport {exportComponentAsPNG} from 'react-component-export-image'\nconst Meme = () => {\n    const memeRef = createRef();\n    const [meme, setMeme] = useState({\n        randomImage: \"images/Empty.png\"\n    });\n    const [allMemes, setAllMemes] = useState([]);\n    \n    useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(res => res.json())\n        .then(data => setAllMemes(data.data.memes))\n    }, [])\n\n\n    const randomMemeHandler = () => {\n        const randomNumber = Math.floor(Math.random() * allMemes.length);              \n        const url = allMemes[randomNumber].url;\n        setMeme(prevMemeUrl => ({\n            ...prevMemeUrl,\n            randomImage: url\n        }))\n    }\n\n    const [countOfTextboxes, setCountOfTextboxes] = useState(0);\n\n    const addText = () => {\n        setCountOfTextboxes(countOfTextboxes + 1)\n    }\n    const removeText = () => {\n        setCountOfTextboxes(0)\n    }\n    return (\n        <main>\n            <div className = \"Meme\" ref={memeRef}>\n                <img src = {meme.randomImage} className=\"Random-img\"></img>\n                {\n                    Array(countOfTextboxes).fill(0).map(element => (<Text/>))\n                }\n            </div>\n            <div className=\"button-div\">\n                <button className=\"btn\"  onClick = {randomMemeHandler} >\n                    Get a New MEME IMAGE\n                </button>\n                <div className=\"d-btn\">\n                    <button className=\"btn-3\" role=\"button\" onClick={addText} onDoubleClick={removeText}>Add Text</button>\n                    <button className=\"btn-3\" role=\"button\" onClick={(element) => exportComponentAsPNG(memeRef)}>Download</button>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Meme"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}