{"ast":null,"code":"var _jsxFileName = \"/Users/jaivik/Library/Mobile Documents/com~apple~CloudDocs/Personal-Projects/memegenerator/src/Components/Button.js\",\n  _s = $RefreshSig$();\nimport memesData from \"../Data/memesData\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = () => {\n  _s();\n  const [meme, setMeme] = useState({\n    randomImage: \"images/Empty.png\"\n  });\n  const allMemeImages = memesData.data.memes;\n  const randomMemeHandler = () => {\n    const memesArray = allMemeImages;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMemeUrl => ({\n      ...prevMemeUrl,\n      randomImage: url\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme.randomImage,\n      className: \"Random-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: randomMemeHandler,\n      children: \"Get a New MEME IMAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Button, \"ooCQeoUtdEFu29NOZ5XnApbJbcs=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["memesData","React","useState","jsxDEV","_jsxDEV","Button","_s","meme","setMeme","randomImage","allMemeImages","data","memes","randomMemeHandler","memesArray","randomNumber","Math","floor","random","length","url","prevMemeUrl","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jaivik/Library/Mobile Documents/com~apple~CloudDocs/Personal-Projects/memegenerator/src/Components/Button.js"],"sourcesContent":["import memesData from \"../Data/memesData\";\nimport React, {useState} from \"react\";\nconst Button = () => {\n    const [meme, setMeme] = useState({\n        randomImage: \"images/Empty.png\"\n    });\n    const allMemeImages = memesData.data.memes;\n    \n    const randomMemeHandler = () => {\n        const memesArray = allMemeImages;\n        const randomNumber = Math.floor(Math.random() * memesArray.length);              \n        const url = memesArray[randomNumber].url;\n        setMeme(prevMemeUrl => ({\n            ...prevMemeUrl,\n            randomImage: url\n        }))\n    }\n    return (\n        <div className=\"button-div\">\n            <img src = {meme.randomImage} className=\"Random-img\"></img>\n            <button className=\"btn\" onClick = {randomMemeHandler}>\n                Get a New MEME IMAGE\n            </button>\n        </div>\n    )\n}\n\nexport default Button;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC7BO,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGV,SAAS,CAACW,IAAI,CAACC,KAAK;EAE1C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGJ,aAAa;IAChC,MAAMK,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,UAAU,CAACK,MAAM,CAAC;IAClE,MAAMC,GAAG,GAAGN,UAAU,CAACC,YAAY,CAAC,CAACK,GAAG;IACxCZ,OAAO,CAACa,WAAW,KAAK;MACpB,GAAGA,WAAW;MACdZ,WAAW,EAAEW;IACjB,CAAC,CAAC,CAAC;EACP,CAAC;EACD,oBACIhB,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBnB,OAAA;MAAKoB,GAAG,EAAIjB,IAAI,CAACE,WAAY;MAACa,SAAS,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DxB,OAAA;MAAQkB,SAAS,EAAC,KAAK;MAACO,OAAO,EAAIhB,iBAAkB;MAAAU,QAAA,EAAC;IAEtD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAvBKD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}